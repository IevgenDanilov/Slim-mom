{"version":3,"sources":["redux/auth/auth-slice.js","redux/calendar/summaries/summaries-slice.js","redux/store.js","shared/components/PrivateRoute/PrivateRoute.jsx","shared/components/PublicRoute/PublicRoute.jsx","navigation/Routes.jsx","App.js","index.js","shared/services/auth.js","redux/auth/auth-operations.js","navigation/Routes.module.scss","shared/services/day.js","redux/calendar/summaries/summaries-operations.js","shared/hooks/useAuth.js","redux/auth/auth-selectors.js","shared/services/daily.js"],"names":["initialState","user","username","email","token","error","authSlice","createSlice","name","extraReducers","authOperations","register","fulfilled","state","payload","rejected","logIn","accessToken","logOut","_","CheckedIsLoginCurrentUser","data","loginInfo","createAction","checkedUser","summariesSlice","id","date","notAllowedProducts","days","todaySummary","userId","eatenProduct","dayId","dayChecked","del","userData","currentDay","find","el","eatenProducts","daySummary","_id","postDailyRate","summaries","pickData","addProduct","day","deleteProduct","newDaySummary","filter","options","eatenProductId","persistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","calendar","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","PrivateRoute","children","redirectTo","routeProps","isLoggedIn","useAuth","to","PublicRoute","restricted","shouldRedirect","CalculatorPage","lazy","DiaryPage","LoginPage","MainPage","RegisterPage","Navbar","Routes","fallback","exact","path","className","styles","App","sideBarDiv","dispatch","useDispatch","isLoggin","useSelector","fetchToken","useEffect","ReactDOM","render","StrictMode","document","getElementById","instance","axios","create","baseURL","set","defaults","headers","authorization","unset","common","onSignUp","credentials","a","post","onLogIn","onLogOut","CheckedCurrentUser","get","format","Date","createAsyncThunk","rejectWithValue","response","status","Notify","failure","message","thunkAPI","getState","persistedToken","module","exports","postDay","console","log","postDayInfo","deleteProductItem","delete","getDailyRateById","Boolean","fetchName","getDailyRate","idUser","ccc"],"mappings":"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","file":"static/js/main.34533f96.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./auth-operations\";\n\nconst initialState = {\n  user: {\n    username: \"\",\n    email: \"\",\n  },\n  token: \"\",\n  error: null,\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n    },\n    [authOperations.register.rejected](state, { payload }) {\n      state.error = payload;\n    },\n    [authOperations.logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.accessToken;\n    },\n    [authOperations.logIn.rejected](state, { payload }) {\n      state.error = payload;\n    },\n    [authOperations.logOut.fulfilled](state, _) {\n      state.user = initialState.user;\n      state.token = \"\";\n    },\n    [authOperations.logOut.rejected](state, { payload }) {\n      state.error = payload;\n    },\n    [authOperations.CheckedIsLoginCurrentUser.fulfilled](state, { payload }) {\n      state.user = payload.data;\n    },\n    [authOperations.CheckedIsLoginCurrentUser.rejected](state, { payload }) {\n      state.token = \"\";\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport {\n  addProduct,\n  deleteProduct,\n  pickData,\n  postDailyRate,\n} from \"./summaries-operations\";\n\nconst initialState = {\n  id: \"\",\n  date: \"\",\n  notAllowedProducts: [],\n  days: [],\n  todaySummary: null,\n  userId: \"\",\n  eatenProduct: [],\n  dayId: \"\",\n  dayChecked: \"\",\n  del: \"\",\n};\n\nconst loginInfo = createAction(\"auth/login/fulfilled\");\nconst checkedUser = createAction(\"auth/checked/fulfilled\");\n\nconst summariesSlice = createSlice({\n  name: \"summaries\",\n  initialState,\n  extraReducers: {\n    [loginInfo]: (state, { payload }) => {\n      state.id = payload.id;\n    },\n    [checkedUser]: (state, { payload }) => {\n      state.id = payload.data.id;\n      state.notAllowedProducts = payload.data.userData.notAllowedProducts;\n      state.days = payload.data.days;\n      state.date = payload.date;\n\n      const currentDay = payload.data.days?.find(\n        (el) => el.date === state.date\n      );\n\n      state.eatenProduct = currentDay?.eatenProducts;\n      state.todaySummary = currentDay?.daySummary;\n      state.dayId = currentDay?._id;\n    },\n    [postDailyRate.fulfilled](state, { payload }) {\n      state.notAllowedProducts = payload.data.notAllowedProducts;\n      state.todaySummary = payload.data.summaries;\n    },\n    [pickData.fulfilled](state, { payload }) {\n      state.eatenProduct = payload.eatenProducts;\n      state.date = payload.date;\n      state.todaySummary = payload.daySummary;\n    },\n\n    [addProduct.fulfilled](state, { payload }) {\n      state.dayId = payload.day?.id;\n      state.date = payload.day?.date;\n      state.eatenProduct = payload.day?.eatenProducts;\n      state.todaySummary = payload?.daySummary;\n      state.userId = payload.day?.userId;\n    },\n    [deleteProduct.fulfilled](state, { payload }) {\n      state.todaySummary = payload.data.newDaySummary;\n      state.eatenProduct = state.eatenProduct.filter(\n        (el) => el.id !== payload.options.eatenProductId\n      );\n    },\n\n    // [currentDate.fulfilled](state, { payload }) {\n    //   state.todaySummary = payload;\n    // },\n  },\n});\n\nexport default summariesSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"./auth/auth-slice\";\nimport summaries from \"./calendar/summaries/summaries-slice\";\n\nconst persistConfig = {\n  key: \"user\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(persistConfig, authReducer),\n    calendar: summaries,\n    // notAllowedProducts: null,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store);\n","import { Route, Redirect } from \"react-router-dom\";\nimport useAuth from '../../hooks/useAuth';\n\n\nconst PrivateRoute = ({ children, redirectTo = \"/\", ...routeProps }) => {\n    const isLoggedIn = useAuth();\n    return (\n      <Route {...routeProps}>\n        {isLoggedIn ? children : <Redirect to={redirectTo} />}\n      </Route>\n    );\n};\n\nexport default PrivateRoute;\n","import { Route, Redirect } from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\n\nconst PublicRoute = ({\n  children,\n  restricted = false,\n  redirectTo = \"/\",\n  ...routeProps\n}) => {\n  const isLoggedIn = useAuth();\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import { lazy, Suspense } from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport styles from \"./Routes.module.scss\";\nimport PrivateRoute from \"../shared/components/PrivateRoute\";\nimport PublicRoute from \"../shared/components/PublicRoute\";\n\nconst CalculatorPage = lazy(() =>\n  import(\"../pages/CalculatorPage/CalculatorPage\")\n);\nconst DiaryPage = lazy(() => import(\"../pages/DiaryPage/Diarypage\"));\nconst LoginPage = lazy(() => import(\"../pages/LoginPage/LoginPage\"));\nconst MainPage = lazy(() => import(\"../pages/MainPage/MainPage\"));\nconst RegisterPage = lazy(() => import(\"../pages/RegisterPage/RegisterPage\"));\nconst Navbar = lazy(() => import(\"../client/Navbar/Navbar\"));\n\nconst Routes = () => {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <PublicRoute restricted exact path=\"/\" redirectTo=\"/calculator\">\n          <div className={styles.App}>\n            <Navbar />\n            <MainPage />\n          </div>\n        </PublicRoute>\n        <PublicRoute restricted exact path=\"/login\" redirectTo=\"/calculator\">\n          <div className={styles.App}>\n            <Navbar />\n            <LoginPage />\n          </div>\n        </PublicRoute>\n        <PublicRoute\n          restricted\n          exact\n          path=\"/registration\"\n          redirectTo=\"/calculator\">\n          <div className={styles.App}>\n            <Navbar />\n            <RegisterPage />\n          </div>\n        </PublicRoute>\n        <PrivateRoute exact path=\"/diary\" redirectTo=\"/login\">\n          <div className={styles.sideBarDiv}>\n            <Navbar />\n            <DiaryPage />\n          </div>\n        </PrivateRoute>\n        <PrivateRoute exact path=\"/calculator\" redirectTo=\"/login\">\n          <div className={styles.sideBarDiv}>\n            <Navbar />\n            <CalculatorPage />\n          </div>\n        </PrivateRoute>\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Routes;\n","import Routes from \"./navigation/Routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport authOperations from \"./redux/auth/auth-operations\";\nimport { useEffect } from \"react\";\nimport \"./shared/styles/common.scss\";\nimport { fetchToken } from \"./redux/auth/auth-selectors\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isLoggin = useSelector(fetchToken);\n\n  useEffect(() => {\n    isLoggin && dispatch(authOperations.CheckedIsLoginCurrentUser());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\nimport { format } from \"date-fns\";\n\nexport const instance = axios.create({\n  baseURL: \"https://slimmom-backend.herokuapp.com/\",\n});\n\nexport const token = {\n  set(token) {\n    instance.defaults.headers.authorization = `Bearer ${token}`;\n  },\n  unset() {\n    instance.defaults.headers.common[\"Authorisation\"] = \"\";\n  },\n};\nexport async function onSignUp(credentials) {\n  const { data } = await instance.post(\"/auth/register\", credentials);\n  return data;\n}\nexport async function onLogIn(credentials) {\n  const { data } = await instance.post(\"/auth/login\", credentials);\n  return data;\n}\n\nexport async function onLogOut() {\n  const { data } = await instance.post(\"/auth/logout\");\n  return data;\n}\nexport async function CheckedCurrentUser() {\n  const { data } = await instance.get(\"/user\");\n  const date = format(new Date(), \"yyyy-MM-dd\");\n  return { data, date };\n}\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  token,\n  onSignUp,\n  onLogIn,\n  onLogOut,\n  CheckedCurrentUser,\n} from \"../../shared/services/auth\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nconst register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const data = await onSignUp(credentials);\n      token.set(data.accessToken);\n      return data;\n    } catch (error) {\n      if (error.response.status === 409) {\n        Notify.failure(\"Provided email already exists, try another\");\n      }\n      Notify.failure(error.message);\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst logIn = createAsyncThunk(\n  \"auth/login\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const data = await onLogIn(credentials);\n      token.set(data.accessToken);\n      return data;\n    } catch (error) {\n      if (error.response.status === 403) {\n        Notify.failure(\"This email doesn't exist or password is wrong\");\n      }\n      Notify.failure(error.message);\n      return rejectWithValue(error);\n    }\n  }\n);\n\nconst logOut = createAsyncThunk(\n  \"auth/logout\",\n  async (_, { rejectWithValue }) => {\n    try {\n      await onLogOut();\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst CheckedIsLoginCurrentUser = createAsyncThunk(\n  \"auth/checked\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const data = await CheckedCurrentUser(persistedToken);\n      return data;\n    } catch (err) {\n      return thunkAPI.rejectWithValue(err);\n    }\n  }\n);\n\nconst authOperations = {\n  register,\n  logIn,\n  logOut,\n  CheckedIsLoginCurrentUser,\n};\nexport default authOperations;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Routes_container__3XD_Y\",\"visuallyHidden\":\"Routes_visuallyHidden__16x7G\",\"App\":\"Routes_App__37AJ7\",\"sideBarDiv\":\"Routes_sideBarDiv__XH2KR\"};","import { instance } from \"./auth\";\n\nexport async function postDay(options) {\n  console.log(options)\n  const { data } = await instance.post(\"/day\", options);\n  return data;\n}\n\nexport async function postDayInfo(options) {\n    console.log(options)\n  const { data } = await instance.post(\"/day/info\", options);\n  return data;\n}\nexport async function deleteProductItem(options) {\n  const { data } = await instance.delete(\"/day\", {\n    data: options,\n  });\n  return { data, options };\n}\n\n// {\n//   \"date\": \"2020-12-31\"\n// }\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getDailyRateById } from \"../../../shared/services/daily\";\nimport {\n  deleteProductItem,\n  postDay,\n  postDayInfo,\n} from \"../../../shared/services/day\";\nimport { Notify } from \"notiflix/build/notiflix-notify-aio\";\n\nexport const postDailyRate = createAsyncThunk(\n  \"summaries/dailyRate\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const data = await getDailyRateById(credentials);\n      return data;\n    } catch (error) {\n      Notify.failure(error.message);\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const pickData = createAsyncThunk(\n  \"summaries/pickData\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const data = await postDayInfo(credentials);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addProduct = createAsyncThunk(\n  \"summaries/addProduct\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const data = await postDay(credentials);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const deleteProduct = createAsyncThunk(\n  \"summaries/delete\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const data = await deleteProductItem(credentials);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\n// export const currentDate = createAsyncThunk(\n//   \"summaries/currentDate\",\n//   async (credentials, { rejectWithValue }) => {\n//     try {\n//       const data = await postDay(credentials);\n//       return data;\n//     } catch (error) {\n//       return rejectWithValue(error);\n//     }\n//   }\n// );\n","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetchToken } from \"../../redux/auth/auth-selectors\";\n\nexport const useAuth = () => {\n  const token = useSelector(fetchToken);\n  useEffect(() => {\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }, [token]);\n  return Boolean(token);\n};\n\nexport default useAuth;\n","export const fetchToken = ({ auth }) => auth.token;\n\nexport const fetchName = ({ auth }) => auth.user.username;\n","import { instance } from \"./auth\";\n\nexport const getDailyRate = async (options) => {\n  return instance.post(\"/daily-rate\", options);\n};\n\nexport const getDailyRateById = async (options) => {\n  return instance.post(`/daily-rate/${options.idUser}`, options.ccc);\n};\n"],"sourceRoot":""}